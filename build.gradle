plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.palantir.docker' version '0.31.0'
	id 'com.palantir.docker-run' version '0.31.0'
	id 'java'
}

group = 'pl.mroz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.6.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.1'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.6.1'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:2.6.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

docker {
	name "${project.name}:${project.version}"
	files "$buildDir/libs/${project.name}-${project.version}.jar"
	buildArgs([JAR_FILE: "${project.name}-${project.version}.jar"])
}

dockerRun {
	name "${project.name}"
	image "${project.name}:${project.version}"
	ports '8080:8080'
	clean true
	daemonize false
}

test {
	useJUnitPlatform()
}

buildscript {
	ext{
		springBootVersion = '3.1.5'
	}
}
plugins {
	//SPRING
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.4'
	//DOCKER
	id 'com.palantir.docker' version '0.35.0'
	id 'com.palantir.docker-run' version '0.35.0'
	id 'com.palantir.docker-compose' version '0.35.0'
	//SWAGGER
	id "com.github.johnrengelman.processes" version "0.5.0"
	id "org.springdoc.openapi-gradle-plugin" version "1.3.3"

	id 'java'
	id 'groovy'
	id 'checkstyle'
	id 'jacoco'
}

group = 'pl.mroz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

apply from: 'gradle/docker.gradle'
apply from: 'gradle/test.gradle'


dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-websocket:$springBootVersion"
	developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"

	//Auth0
	implementation 'com.okta.spring:okta-spring-boot-starter:3.0.5'

	implementation 'org.springframework.security:spring-security-core:6.1.5'

	runtimeOnly 'org.postgresql:postgresql:42.6.0'
	implementation 'org.postgresql:postgresql:42.6.0'

	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	// JavaFaker to generate realistic looking testing data
	implementation 'com.github.javafaker:javafaker:1.0.2'
}

openApi {
	outputDir.set(file("$buildDir/OpenAPI"))
	outputFileName.set("buddiesAPI.json")
}
